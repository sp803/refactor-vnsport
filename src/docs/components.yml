components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        dob:
          type: string
          format: date
        phoneNumber:
          type: string
        email:
          type: string
          format: email
        gender:
          type: string
          enum: [male, female, other]
        address:
          type: string
        avatarUrl:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
      example:
        id: 1c987ee7-8d4b-4ff8-a1d0-b0eaf7ecc244
        name: Jame bonds
        dob: 1999-12-31T17:00:00.000Z
        phoneNumber: null
        email: mrjames@vnsport.com
        gender: other
        address: null
        avatarUrl: null
        createdAt: 2022-03-04T07:34:31.000Z
        updatedAt: 2022-03-04T07:34:31.000Z
    token:
      type: string
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
    Error:
      type: object
      properties:
        error:
          type: string
    ProductPreview:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        price:
          type: number
        discountPrice:
          type: number
        state:
          type: string
          enum: [available, outStock, hidden]
        mainImageUrl:
          type: string
        soldCount:
          type: number
          description: Number of products has sold
        visitedCount:
          type: number
          description: Number of product detail visited
        reviewCount:
          type: number
          description: Number of product's review
      example:
        id: 08c0e96e-35ff-4c38-89cd-33547ff3d995
        title: Dây thừng tập thể lực
        price: 1100000
        discountPrice: null
        state: available
        mainImageUrl: /images/images_5e522593-027a-4ae9-b403-820fc35e20b1_.jpg
        soldCount: 0
        visitedCount: 0
        reviewCount: 0
    Product:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        detail:
          type: string
        price:
          type: number
        discountPrice:
          type: number
        state:
          type: string
          enum: [available, outStock, hidden]
        mainImageUrl:
          type: string
        soldCount:
          type: number
          description: Number of products has sold
        visitedCount:
          type: number
          description: Number of product detail visited
        reviewCount:
          type: number
          description: Number of product's review
        availableQuantity:
          type: number
          description: Number of products in stock
        brandId:
          type: number
        categoryId:
          type: number
      example:
        id: 08c0e96e-35ff-4c38-89cd-33547ff3d995
        title: Dây thừng tập thể lực
        detail: Xe đạp tập thể dục BC66013 có yên tựa lưng được thiết kế chắc chắn, vận hành cực êm và phù hợp dùng tập cho người già hoặc người phục hồi chức năng. Có nhu cầu mua xe đạp tập BC66013 chính hãng, giá rẻ nhất vui lòng liên hệ Dụng Cụ Thể Dục !\r\nXe đạp tập thể dục BC66013\r\n- Toàn bộ khung chính của xe đạp được làm từ thép dày, có khả năng chịu lực tốt và bề mặt vật liệu được sơn tĩnh điện có tác dụng giúp chống rỉ sét. Khung xe bền bỉ, đảm bảo không
        price: 1100000
        discountPrice: null
        state: available
        mainImageUrl: /images/images_5e522593-027a-4ae9-b403-820fc35e20b1_.jpg
        soldCount: 0
        visitedCount: 0
        reviewCount: 0
        availableQuantity: 25
        categoryId: 5
        brandId: 9
    Brand:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      example:
        id: 5
        name: Adidas
    Category:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        code:
          type: string
          description: Unique string id, generated from name
        categoryGroupId:
          type: number
      example:
        id: 17
        name: Găng Tay Boxing
        code: gang-tay-boxing
        CategoryGroupId: 3
    CategoryGroup:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        code:
          type: string
          description: Unique string id, generated from name
      example:
        id: 1,
        name: Khác
        code: khac

    ProductImage:
      type: object
      properties:
        id:
          type: number
        url:
          type: string
        productId:
          type: string

  responses:
    BadRequest:
      description: Invalid field
      content:
        application/json:
          schema:
            type: object
          example:
            error: \"title\" is required, \"detail\" is required, \"price\" is required, \"warrantyPeriodByDay\" is required, \"brandId\" is required, \"categoryId\" is required
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Invalid token
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Missing authorization
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Not found
    Conflict:
      description: Some field is not unique
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
